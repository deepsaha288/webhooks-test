pipeline {
    agent any

    parameters {
        choice(name: 'ENVIRONMENT', choices: ['dev', 'stage', 'prod'], description: 'Target environment')
        string(name: 'S3_BUCKET_NAME', description: 'S3 Bucket Name')
        string(name: 'STACK_NAME', description: 'CloudFormation Stack Name')
        string(name: 'AWS_REGION', defaultValue: 'us-east-1', description: 'AWS Region')
        string(name: 'KMS_ARN', description: 'KMS ARN Key')
    }

    environment {
        CREDENTIAL_ID = ""
    }

    stages {
        stage('Determine Credentials') {
            steps {
                script {
                    if (params.ENVIRONMENT == 'dev') {
                        env.CREDENTIAL_ID = 'aws-creds-dev'
                    } else if (params.ENVIRONMENT == 'stage') {
                        env.CREDENTIAL_ID = 'aws-creds-stage'
                    } else if (params.ENVIRONMENT == 'prod') {
                        env.CREDENTIAL_ID = 'aws-creds-prod'
                    } else {
                        error "Unsupported environment: ${params.ENVIRONMENT}"
                    }
                }
            }
        }

        stage('Trigger S3 Bucket Creation') {
            steps {
                build job: 'create-s3-bucket', parameters: [
                    string(name: 'S3_BUCKET_NAME', value: params.S3_BUCKET_NAME),
                    string(name: 'STACK_NAME', value: params.STACK_NAME),
                    string(name: 'AWS_REGION', value: params.AWS_REGION),
                    string(name: 'KMS_ARN', value: params.KMS_ARN),
                    string(name: 'CREDENTIAL_ID', value: env.CREDENTIAL_ID)
                ]
            }
        }
    }
}
